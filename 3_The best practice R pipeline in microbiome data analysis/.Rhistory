step = 100, # 随机网络抽样的次数
width = 18,
label = TRUE,
height = 10
)
p = result[[1]]
p
# 全部样本网络参数比对
data = result[[2]]
plotname1 = paste(Envnetplot,"/network_all.jpg",sep = "")
ggsave(plotname1, p,width = 15,height = 12,dpi = 72)
plotname1 = paste(Envnetplot,"/network_all.png",sep = "")
ggsave(plotname1, p,width = 10,height = 8,dpi = 72)
plotname1 = paste(Envnetplot,"/network_all.pdf",sep = "")
ggsave(plotname1, p,width = 15,height = 12)
tablename <- paste(Envnetplot,"/co-occurrence_Grobel_net",".csv",sep = "")
write.csv(data,tablename)
library(picante)
library(ape)
library(vegan)
library(FSA)
library(eulerr)
library(grid)
library(gridExtra)
require(minpack.lm)
require(Hmisc)
require(stats4)
library(parallel)
env = read.csv("./data/dataNEW/env.csv")
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
res1path = "./result_and_plot/"
phypath = paste(res1path,"/Phylogenetic_analyse_spacies/",sep = "")
dir.create(phypath)
map = sample_data(ps)
n = map$Group %>% unique() %>%
length()
n
#--中性模型#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\neutralModel.R")
result = neutralModel(ps = psphy,group  = "Group",ncol = 3)
library(picante)
library(ape)
library(vegan)
library(FSA)
library(eulerr)
library(grid)
library(gridExtra)
require(minpack.lm)
require(Hmisc)
require(stats4)
library(parallel)
env = read.csv("./data/dataNEW/env.csv")
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
res1path = "./result_and_plot/"
phypath = paste(res1path,"/Phylogenetic_analyse_spacies/",sep = "")
dir.create(phypath)
map = sample_data(ps)
n = map$Group %>% unique() %>%
length()
n
#--中性模型#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\neutralModel.R")
result = neutralModel(ps = ps,group  = "Group",ncol = 3)
#--合并图表
p1 =  result[[1]]
p1
FileName <- paste(phypath,"1_neutral_modelCul", ".pdf", sep = "")
ggsave(FileName, p1,width = 12,height = 4)
FileName <- paste(phypath,"1_neutral_modelCul", ".png", sep = "")
ggsave(FileName, p1,width = 12,height = 4)
#--细菌和环境因子的网络#--------
env = read.csv("./data/dataNEW/env.csv")
head(env)
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
Envnetplot<- paste(res1path,"/Env_network",sep = "")
dir.create(Envnetplot)
ps16s = readRDS("./data/dataNEW/ps_16s.rds")%>% ggClusterNet::scale_micro()
psITS = NULL
library(phyloseq)
#--细菌和真菌ps对象中的map文件要一样
ps.merge <- ggClusterNet::merge16S_ITS(ps16s = ps16s,
psITS= psITS,
NITS = 200,
N16s = 200)
#--细菌和真菌ps对象中的map文件要一样
ps.merge <- ggClusterNet::merge16S_ITS(ps16s = ps16s,
psITS= NULL,
NITS = 200,
N16s = 200)
map =  phyloseq::sample_data(ps.merge)
head(map)
map$Group = "one"
phyloseq::sample_data(ps.merge) <- map
#--环境因子导入
data1 = env
envRDA.s = vegan::decostand(envRDA,"hellinger")
data1[,-1] = envRDA.s
Gru = data.frame(ID = colnames(env)[-1],group = "env" )
head(Gru)
library(sna)
library(ggClusterNet)
library(igraph)
result <- ggClusterNet::corBionetwork(ps = ps.merge,
N = 0,
r.threshold = 0.6, # 相关阈值
p.threshold = 0.05,
big = T,
group = "Group",
env = data1, # 环境指标表格
envGroup = Gru,# 环境因子分组文件表格
layout_net = "model_maptree2",
path = Envnetplot,# 结果文件存储路径
fill = "Phylum", # 出图点填充颜色用什么值
size = "igraph.degree", # 出图点大小用什么数据
scale = TRUE, # 是否要进行相对丰度标准化
bio = TRUE, # 是否做二分网络
zipi = F, # 是否计算ZIPI
step = 100, # 随机网络抽样的次数
width = 18,
label = TRUE,
height = 10
)
Envnetplot
p = result[[1]]
p
# 全部样本网络参数比对
data = result[[2]]
plotname1 = paste(Envnetplot,"/network_all.jpg",sep = "")
ggsave(plotname1, p,width = 15,height = 12,dpi = 72)
plotname1 = paste(Envnetplot,"/network_all.png",sep = "")
ggsave(plotname1, p,width = 10,height = 8,dpi = 72)
plotname1 = paste(Envnetplot,"/network_all.pdf",sep = "")
ggsave(plotname1, p,width = 15,height = 12)
tablename <- paste(Envnetplot,"/co-occurrence_Grobel_net",".csv",sep = "")
write.csv(data,tablename)
if (is.na(match("Fungi",id))) {
res1path <- "./result_and_plot/Micro_and_other_index_16s_220922/"
} else if(is.na(match("Bacteria",id))) {
res1path <- "./result_and_plot/Micro_and_other_index_ITS/"
}
dir.create(res1path)
res1path
#--细菌和环境因子的网络#--------
env = read.csv("./data/dataNEW/env.csv")
head(env)
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
Envnetplot<- paste(res1path,"/Env_network",sep = "")
dir.create(Envnetplot)
p
# 全部样本网络参数比对
data = result[[2]]
plotname1 = paste(Envnetplot,"/network_all.jpg",sep = "")
ggsave(plotname1, p,width = 15,height = 12,dpi = 72)
plotname1 = paste(Envnetplot,"/network_all.png",sep = "")
ggsave(plotname1, p,width = 10,height = 8,dpi = 72)
plotname1 = paste(Envnetplot,"/network_all.pdf",sep = "")
ggsave(plotname1, p,width = 15,height = 12)
tablename <- paste(Envnetplot,"/co-occurrence_Grobel_net",".csv",sep = "")
write.csv(data,tablename)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
psphy
#--系统发育信号#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\phyloSignal_and_phySigplot.R")
#
phypath2 = paste(phypath,"/phyloSignal/",sep = "")
dir.create(phypath)
phyloSignal(ps = psphy,
group  = "Group",
env = env[,1:2],
path = phypath2)
library(picante)
library(ape)
library(vegan)
library(FSA)
library(eulerr)
library(grid)
library(gridExtra)
require(minpack.lm)
require(Hmisc)
require(stats4)
library(parallel)
env = read.csv("./data/dataNEW/env.csv")
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
res1path = "./result_and_plot/"
phypath = paste(res1path,"/Phylogenetic_analyse_spacies/",sep = "")
dir.create(phypath)
map = sample_data(ps)
n = map$Group %>% unique() %>%
length()
n
#--系统发育信号#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\phyloSignal_and_phySigplot.R")
#
phypath2 = paste(phypath,"/phyloSignal/",sep = "")
dir.create(phypath)
phyloSignal(ps = psphy,
group  = "Group",
env = env[,1:2],
path = phypath2)
env
psphy
# 参数文件; Tao Wen, 2022.10.05
library(tidyverse)
library(phyloseq)
library(ggClusterNet)
#--输入和设定文件
ps0 = base::readRDS("./data/dataNEW/ps_16s.rds")
# data(ps)
ps0 = ps
change.rank.name(ps0)
env = read.csv("./data/dataNEW/env.csv")
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
res1path = "./result_and_plot/"
#--系统发育信号#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\phyloSignal_and_phySigplot.R")
#
phypath2 = paste(phypath,"/phyloSignal/",sep = "")
dir.create(phypath)
phyloSignal(ps = psphy,
group  = "Group",
env = env[,1:2],
path = phypath2)
env[,1:2]
sample_data(psphy)
#--输入和设定文件
ps0 = base::readRDS("./data/dataNEW/ps_16s.rds")
# data(ps)
ps0 = ps
change.rank.name(ps0)
change.rank.name(ps0)
# # 高丰度微生物挑选
# ps0 %>% scale_micro() %>%
#   filter_taxa(function(x) sum(x ) > 0.01 , TRUE)
# #低丰度微生物挑选
# ps0 %>% scale_micro() %>%
# filter_taxa(function(x) sum(x ) < 0.0001 , TRUE)
# #---解决错误
# ps0 = base::readRDS("./Error/221121/ps_its.rds")
# ps0
# .libPaths()
# .libPaths(new="C:/Program Files/R/R-4.1.1/library")
# 基于phyloseq对象进行分析
# 设定主题，颜色，分组数量，分组排序，比较类型等内容
# 如果是微生物数据，可以定义进化树展示的微生物数量，默认150个
# 同时设定lefse用的微生物的数量
#---扩增子环境布置
#-主题--颜色等
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\total_amplicon.R")
res = theme_my(ps0)
mytheme1 = res[[1]]
mytheme2 = res[[2]];
colset1 = res[[3]];colset2 = res[[4]];colset3 = res[[5]];colset4 = res[[6]]
result<- dir.amp(ps0 = ps0,smart = TRUE)#--如果出现错误，设定smart = F；是由于注释信息不符合本代码标准导致的
res1path = result[[1]];res1path
id = result[[2]];id
#--OTU base diversity 保存文件夹
otupath = paste(res1path,"/OTU/",sep = "");otupath
dir.create(otupath)
# #--如何筛选样本:去除sample1
# ps_sub <- subset_samples.wt(ps0,"ID",c("sample1"),T);ps_sub
# #--如何筛选微生物
# ps0 <- ps0 %>% subset_taxa.wt("Kingdom", id) ;ps0
#--最终确定的phyloseq对象定义为ps
ps = ps0 %>% filter_taxa(function(x) sum(x ) > 0 , TRUE)
#--提取分组因子数量
gnum = phyloseq::sample_data(ps)$Group %>% unique() %>% length()
gnum
#--设定排序顺序
axis_order =  phyloseq::sample_data(ps)$Group %>%unique();axis_order
# axis_order = c("Group2","Group3","Group1")
#--物种分类树展示的OTU数量
Top_micro = 150
#--堆叠柱状图展示前Top的微生物,j 展示的微生物分类等级
Top = 12
jj = j = "Phylum"
#韦恩网络设置过滤阈值
ps_biost = ggClusterNet::filter_OTU_ps(ps = ps,Top = 500)
#--差异分析设定两两比对
# group1 = c("Gro1","Gro2")
# group2 = c("Gro1","Gro2")
# b= data.frame(group1,group2)
# b
b = NULL# 如果每两个组之间都做差异，那就指定b为NULL
# 热图展示的OTU数量
heatnum　=　30
#--R语言做lefse的过滤数量
ps_Rlefse = ggClusterNet::filter_OTU_ps(ps = ps,Top = 400)
#--机器学习部分
ROC = FALSE# ROC是三种机器学习的ROC曲线，但是只能跑两个分组，如果两组，可以选择为T。
rfcv = FALSE# 是否做交叉检验
optimal = 40# 选择多少个重要变量
#--功能预测
if (is.null(ps0@refseq)) {
Tax4Fun2 = FALSE
} else if(!is.null(ps0@refseq)){
Tax4Fun2 = TRUE
}
ps.t = ps0 %>% ggClusterNet::filter_OTU_ps(1000)
if (Tax4Fun2) {
dir.create("data")
otu = ps.t %>%
# ggClusterNet::filter_OTU_ps(1000) %>%
ggClusterNet:: vegan_otu() %>%
t() %>%
as.data.frame()
# write.table(otu,"./data/otu.txt",quote = F,row.names = T,col.names = T,sep = "\t")
rep = ps.t %>%
# ggClusterNet::filter_OTU_ps(1000) %>%
phyloseq::refseq()
rep
# library(Biostrings)
Biostrings::writeXStringSet(rep,"./data/otu.fa")
#开头空一格字符保存
write.table("\t", "./data/otu.txt",append = F, quote = F, eol = "", row.names = F, col.names = F)
# 保存统计结果，有waring正常
write.table(otu, "./data/otu.txt", append = T, quote = F, sep="\t", eol = "\n", na = "NA", dec = ".", row.names = T, col.names = T)
}
#-----选择性功能#---------
#设置CK，用于双向柱状图绘制-目前不绘制
CK = unique(phyloseq::sample_data(ps)$Group)[1]
# 用python做lefse
lefse.py = T
if (lefse.py) {
lefsenum = 0
ps_lefse <- ps %>%
phyloseq::subset_taxa(
# Kingdom == "Fungi"
Kingdom == id
# Genus  == "Genus1"
# Species %in%c("species1")
# row.names(tax_table(ps0))%in%c("OTU1")
)
ps_lefse = ggClusterNet::filter_OTU_ps(ps = ps_lefse,Top = 400)
}
library(picante)
library(ape)
library(vegan)
library(FSA)
library(eulerr)
library(grid)
library(gridExtra)
require(minpack.lm)
require(Hmisc)
require(stats4)
library(parallel)
env = read.csv("./data/dataNEW/env.csv")
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
res1path = "./result_and_plot/"
phypath = paste(res1path,"/Phylogenetic_analyse_spacies/",sep = "")
dir.create(phypath)
map = sample_data(ps)
n = map$Group %>% unique() %>%
length()
n
#--系统发育信号#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\phyloSignal_and_phySigplot.R")
sample_data(psphy)
phypath2 = paste(phypath,"/phyloSignal/",sep = "")
dir.create(phypath)
phyloSignal(ps = psphy,
group  = "Group",
env = env[,1:2],
path = phypath2)
sample_data(psphy)
ps = base::readRDS("./data/dataNEW/ps_16s.rds")
env = read.csv("./data/dataNEW/env.csv")
envRDA = env
head(env)
row.names(envRDA) = env$ID
envRDA$ID = NULL
head(envRDA)
psphy = filter_taxa(ps, function(x) sum(x ) > 1000 , TRUE);psphy
res1path = "./result_and_plot/"
phypath = paste(res1path,"/Phylogenetic_analyse_spacies/",sep = "")
dir.create(phypath)
#--系统发育信号#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\phyloSignal_and_phySigplot.R")
sample_data(psphy)
phypath2 = paste(phypath,"/phyloSignal/",sep = "")
dir.create(phypath)
phyloSignal(ps = psphy,
group  = "Group",
env = env[,1:2],
path = phypath2)
sample_data(psphy)
env[,1:2]
#--系统发育信号#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\phyloSignal_and_phySigplot.R")
sample_data(psphy)
phypath2 = paste(phypath,"/phyloSignal/",sep = "")
dir.create(phypath)
phyloSignal(ps = psphy,
group  = "Group",
env = env[,1:2],
path = phypath2)
#--BNTI#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\bNTICul.R")
result = bNTICul(ps = psphy,group  = "Group",num = 100,thread = 1)
bNTI = result[[1]]
head(bNTI)
filename = paste(phypath,"/4_bNTI.csv",sep = "")
write.csv(bNTI, filename)
#--计算RCbray#-----------
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\RCbary.R")
result = RCbary(ps = psphy ,group  = "Group",num = 10,thread = 1)
RCbary = result[[1]]
head(RCbary)
filename = paste(phypath,"/5_RCb.csv",sep = "")
write.csv(RCbary,filename)
#--BetaNTI和RCbray联合出图#---------
# phypath = "./result_and_plot/16S_env_phylo_processing/Phylogenetic_analyse_spacies/"
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\bNTIRCPlot.R")
bNTI = read.csv(paste(phypath,"/4_bNTI.csv",sep = ""),row.names = 1)
head(bNTI)
# RCbray 数据读入，修改列名
RCb = read.csv(paste(phypath,"/5_RCb.csv",sep = ""),row.names = 1) %>%
dplyr::mutate(Sample_1 = Site2, Sample_2 = Site1)
head(RCb)
result = bNTIRCPlot(ps = psphy ,RCb  = RCb,bNTI = bNTI,group  = "Group")
#--bNTI出图片
p3 <- result[[1]] + mytheme1
p3
#RCbary可视化
p4 <- result[[2]] + mytheme1
p4
#组合图片BNTI，RCbray
p5 <- result[[3]]
p5
plotdata = result[[4]]
head(plotdata)
dat = result[[5]]
head(dat)
filename = paste(phypath,"/6_bNTI_RCbray.csv",sep = "")
write.csv(plotdata,filename)
FileName <- paste(phypath,"6_bNTI", ".pdf", sep = "")
ggsave(FileName, p3,width =8,height = 6)
FileName <- paste(phypath,"6_RCbary", ".pdf", sep = "")
ggsave(FileName, p4,width = 6,height = 6)
FileName <- paste(phypath,"6_BNTI_RCbray", ".pdf", sep = "")
ggsave(FileName, p5,width = 12,height = 8)
FileName <- paste(phypath,"6_bNTI", ".png", sep = "")
ggsave(FileName, p3,width =8,height = 6)
FileName <- paste(phypath,"6_RCbary", ".png", sep = "")
ggsave(FileName, p4,width = 6,height = 6)
FileName <- paste(phypath,"6_BNTI_RCbray", ".png", sep = "")
ggsave(FileName, p5,width = 12,height = 8)
FileName <- paste(phypath,"6_RCbray.percent.csv", sep = "")
write.csv(dat,FileName, quote = F)
#---环境因子和BetaNTI相关#---------
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\EnvCorbNTI.R")
#-导入bNTI函数
bNTIRC = read.csv(paste(phypath,"/6_bNTI_RCbray.csv",sep = ""),row.names = 1)
head(bNTIRC)
map = sample_data(psphy)
head(map)
plot = EnvCorbNTI(ps = psphy,
bNTIRC = bNTIRC,
group  = "Group",
env = envRDA
)
## 提取相关分析结果，总图
p6 <- plot[[1]]
p6
#提取单个
# plot[[2]][1]
FileName <- paste(phypath,"7_env_corWithBNTI", ".pdf", sep = "")
ggsave(FileName, p6,width = 16,height = 14)
FileName <- paste(phypath,"7_env_corWithBNTI", ".png", sep = "")
ggsave(FileName, p6,width = 16,height = 14)
psphy
psphy
psphy = filter_taxa(ps, function(x) sum(x ) > 1200 , TRUE);psphy
#--BNTI#----
source("E:\\Shared_Folder\\Function_local\\R_function\\micro\\phylo_Micro\\bNTICul.R")
result = bNTICul(ps = psphy,group  = "Group",num = 10,thread = 1)
bNTI = result[[1]]
head(bNTI)
filename = paste(phypath,"/4_bNTI.csv",sep = "")
write.csv(bNTI, filename)
