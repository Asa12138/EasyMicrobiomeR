---
title: "pipeline_4_animalcules"
author: "wentao"
date: "2021/5/14"
output: html_document
---


```{css include=FALSE}
 pre code,pre,code {
 white-space:pre!important;
 overflow-x: scroll!important; 
} 
```


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE,
                      fig.width = 7,
                      fig.height = 5,
                      fig.align = "center",
                      warning = FALSE,
                      message = FALSE
                      
                      )
```

### 准备数据


```{R}
library(animalcules)
library(SummarizedExperiment)
library(MultiAssayExperiment)
#--得到phyloserq对象并提取必要数据信息
library(ggClusterNet)
library(phyloseq)
data(ps)

otu = as.data.frame(t(vegan_otu(ps)))
head(otu)
tax = as.data.frame((vegan_tax(ps)))
head(tax)
map = sample_data(ps)
head(map)


#--首先构造SummarizedExperiment对象，比较简单，类似phyloseq对象
micro <- SummarizedExperiment(assays=list(counts=as.matrix(otu)),
                              colData=map,
                              rowData=tax)
# 将SummarizedExperiment对象封装成为ExperimentList

mlist <- ExperimentList()
mlist[[1]] = micro
names(mlist) = "MicrobeGenetics"# 注意必须命名，否则无法区分每个部分数据组
# 构造不同数据组之间的记录文件
gistmap <- data.frame(
  primary = row.names(map),
  colname = row.names(map),
  stringsAsFactors = FALSE)
maplistowe <- list(MicrobeGenetics = gistmap)
sampMapowe <- listToMap(maplistowe)

# colData文件为分组文件，数据框即可，本案例只有一个微生物组数据，所以直接用map文件就可以了。
#-下面就直接构建了MultiAssayExperiment文件
mae <- MultiAssayExperiment(experiments = mlist, colData = map,
                            sampleMap = sampMapowe)


```

### 运行Shiny app-导入数据-网页分析


```{R eval=FALSE, include=FALSE}

run_animalcules()
```


### 微生物组数据基本统计和描述



这部分用于统计每个样本中OTU的数量，并做两种方式可视化：频率曲线，箱线 + 散点图；如果使用shiny程序的话，直接可以展示表格。
此外，可以按照微生物分类水平合并OTU数据：


```{R}

p <- filter_summary_pie_box(mae,
                            samples_discard = c("subject_2", "subject_4"),
                            filter_type = "By Metadata",
                            sample_condition = "Group")
p

```

更换分组，重新统计。

```{R}
p <- filter_summary_bar_density(mae,
                                samples_discard = c("subject_2", "subject_4"),
                                filter_type = "By Metadata",
                                sample_condition = "Group")
p

```





### 微生物组数据分析-微生物丰度展示-堆叠柱状图

通过tax_level选择某个分类等级，通过 sample_conditions 选择需要添加的分组标签。值得注意的是这里可以对堆叠柱状图排序的，通过order_organisms来指定，默认丰度从高到低。这里从源代码来看就是通过改变factor来实现的，所以图例第一个也是排序的这个微生物。

```{R}
p <- relabu_barplot(mae,
                    tax_level="Family",
                    # order_organisms=c('Retroviridae'),
                    sort_by="nosort",
                    sample_conditions= "Group",
                    show_legend=TRUE)
p

```


### 微生物组数据分析-微生物丰度展示-热图


```{R}
p <- relabu_heatmap(mae,
                   tax_level="Genus",
                   # sort_by="conditions",
                   sample_conditions=c("Group"))
p

```


### 微生物丰度展示-箱线图


```{R}
library(tidyverse)
tax = vegan_tax(ps) %>% as.data.frame()
Gname <- table(tax$Genus) %>%names()
p <- relabu_boxplot(mae,
                    tax_level="Genus",
                    organisms=Gname[1:3],
                    condition="Group",
                    datatype="logcpm")
p

```



### 微生物组数据分析-多样性-alpha多样性

这里有四个多样性指标。然后通过箱线+散点图展示。

```{R}
alpha_div_boxplot(MAE = mae,
                  tax_level = "Genus",
                  condition = "Group",
                  alpha_metric = "shannon") 

```

对多样性进行统计检验。这里可选的是"Wilcoxon rank sum test", "T-test", "Kruskal-Wallis"这三种方法。这里作者检测仅仅支持分组文件是数值的（因为作者使用了cor.test函数），不够人性化。



```{R}
otu = as.data.frame(t(vegan_otu(ps)))
head(otu)
tax = as.data.frame((vegan_tax(ps)))
head(tax)
map = sample_data(ps)
head(map)
map$Group = map$Group %>% as.numeric()

#--首先构造SummarizedExperiment对象，比较简单，类似phyloseq对象
micro <- SummarizedExperiment(assays=list(counts=as.matrix(otu)),
                              colData=map,
                              rowData=tax)
# 将SummarizedExperiment对象封装成为ExperimentList

mlist <- ExperimentList()
mlist[[1]] = micro
names(mlist) = "MicrobeGenetics"# 注意必须命名，否则无法区分每个部分数据组
# 构造不同数据组之间的记录文件
gistmap <- data.frame(
  primary = row.names(map),
  colname = row.names(map),
  stringsAsFactors = FALSE)
maplistowe <- list(MicrobeGenetics = gistmap)
sampMapowe <- listToMap(maplistowe)

# colData文件为分组文件，数据框即可，本案例只有一个微生物组数据，所以直接用map文件就可以了。
#-下面就直接构建了MultiAssayExperiment文件
mae <- MultiAssayExperiment(experiments = mlist, colData = map,
                            sampleMap = sampMapowe)



do_alpha_div_test(MAE = mae,
                  tax_level = "Genus",
                  condition = "Group",
                  alpha_metric = "inverse_simpson",
                  alpha_stat = "T-test")



```


### 微生物组数据分析-多样性-beta多样性-聚类距离热图


```{R}
diversity_beta_heatmap(MAE = mae, 
                       tax_level = 'Genus', 
                       input_beta_method = "bray",
                       input_bdhm_select_conditions = 'Group',
                       input_bdhm_sort_by = 'condition')

```

其次通过组内距离和组件距离的箱线图展示

```{R}
diversity_beta_boxplot(MAE = mae, 
                       tax_level = 'Genus', 
                       input_beta_method = "bray",
                       input_select_beta_condition = 'Group')

```

再有就是统计检验,共有三种方法可以选择：PERMANOVA,Kruskal-Wallis,Wilcoxon test。
但是只有两种距离可供选择，其次就是两两比较不能实现。

```{R}


diversity_beta_test(MAE = mae, 
                    tax_level = 'Genus',
                    input_beta_method = "bray",
                    input_select_beta_condition =  'Group',
                    input_select_beta_stat_method = 'PERMANOVA',
                    input_num_permutation_permanova = 999)

```



### 微生物组数据分析-排序 四种方法

PCA

```{R}
result <- dimred_pca(mae,
                     tax_level="Genus",
                     color="Group",
                     shape="Group",
                     pcx=1,
                     pcy=2,
                     datatype="logcpm")
result$plot

```

PCoA

```{R}
result <- dimred_pcoa(mae,
                      tax_level="Genus",
                      color="Group",
                     shape="Group",
                      axx=1,
                      axy=2,
                      method="bray")
result$plot

```

UMAP

```{R}

esult <- dimred_umap(mae,
                      tax_level="Genus",
                      color="Group",
                     shape="Group",
                      cx=1,
                      cy=2,
                      n_neighbors=15,
                      metric="euclidean",
                      datatype="logcpm")
result$plot
```

t-SNE，除了二维图形展示还可以进行三维图形的展示。


```{R}
result <- dimred_tsne(mae,
                      tax_level="Genus",
                      color="Group",
                     shape="Group",
                      k="3D",
                      initial_dims=30,
                      perplexity=10,
                      datatype="logcpm")
result$plot
```


### 微生物组数据分析-差异分析


```{R}
p <- differential_abundance(mae,
                            tax_level="Phylum",
                            input_da_condition=c("Group"),
                            min_num_filter = 2,
                            input_da_padj_cutoff = 0.5)
p

```



### 微生物组数据分析-生物标记物分析

这里可选的方法有两个："logistic regression", "random forest"。这里去除一个分组。因为ROC只能支持两个分组。


```{R}
ps <- subset_samples(ps,!Group %in% c("OE"));ps
otu = as.data.frame(t(vegan_otu(ps)))
head(otu)
tax = as.data.frame((vegan_tax(ps)))
head(tax)
map = sample_data(ps)
head(map)


#--首先构造SummarizedExperiment对象，比较简单，类似phyloseq对象
micro <- SummarizedExperiment(assays=list(counts=as.matrix(otu)),
                              colData=map,
                              rowData=tax)
# 将SummarizedExperiment对象封装成为ExperimentList

mlist <- ExperimentList()
mlist[[1]] = micro
names(mlist) = "MicrobeGenetics"# 注意必须命名，否则无法区分每个部分数据组
# 构造不同数据组之间的记录文件
gistmap <- data.frame(
  primary = row.names(map),
  colname = row.names(map),
  stringsAsFactors = FALSE)
maplistowe <- list(MicrobeGenetics = gistmap)
sampMapowe <- listToMap(maplistowe)

# colData文件为分组文件，数据框即可，本案例只有一个微生物组数据，所以直接用map文件就可以了。
#-下面就直接构建了MultiAssayExperiment文件
mae <- MultiAssayExperiment(experiments = mlist, colData = map,
                            sampleMap = sampMapowe)


p <- find_biomarker(mae,
                    tax_level = "Genus",
                    input_select_target_biomarker = c("Group"),
                    nfolds = 3,
                    nrepeats = 6,
                    seed = 99,
                    percent_top_biomarker = 0.2,
                    model_name = "logistic regression")
#-提取生物标记物
p$biomarker



#对重要变量可视化。
# importance plot
p$importance_plot

#ROC曲线准确度评估。注意ROC曲线只能对二分便量进行操作。
# ROC plot
p$roc_plot

```



```{R}

sessionInfo()


```

## reference

- https://bioconductor.org/packages/release/bioc/vignettes/animalcules/inst/doc/animalcules.html


