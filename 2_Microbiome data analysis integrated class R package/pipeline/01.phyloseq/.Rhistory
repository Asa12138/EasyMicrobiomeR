library(ggplot2)
library(phyloseq)
library(ggClusterNet)# github：taowenmicro/ggCLusterNet
#统计OTU数量
ntaxa(ps)
# 统计样品数量
nsamples(ps)
# 查看样品名称
sample_names(ps)[1:5]
# 查看物种分类等级
rank_names(ps)
# 查看分组文件表头信息
sample_variables(ps)
# 部分可视化OTU表格
otu_table(ps)[1:5, 1:5]
# 部分可视化tax注释表格
tax_table(ps)[1:5, 1:4]
# 查看进化树文件
phy_tree(ps)
#-基于样本-----去除序列量比较少的样本
ps <- prune_samples(sample_sums(ps) >=2000,ps);ps
#--基于样本----去除低丰度OTU，这里去除全部read为0的OTU
ps = filter_taxa(ps, function(x) sum(x ) > 0 , TRUE)
p0 <- plot_richness(ps, x="Group", color="Group", measures=c("Chao1", "Observed"))
p0$layers[[2]] = NULL # 去除误差线
# 添加箱型图
p0 <- p0  + geom_boxplot() + theme_bw()
ggsave("./Fig1_alpha.png",p0,width = 6,height = 4)
ps_rela = transform_sample_counts(ps, function(x) 1E6 * x/sum(x))
ord <- ordinate(ps_rela, "NMDS", "bray")
ord
p1 = plot_ordination(ps, ord, type="samples", color="Group", title="Ordination") + theme_bw()
p1
ggsave("./Fig2_ordination.png",p1,width = 5,height = 5)
ps_rela = transform_sample_counts(ps, function(x) x/sum(x))
#--相对丰都标准化后展示全部OTU-使用门水平着色。
p2 <- plot_bar(ps_rela, fill="Phylum")
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 6,height = 8)
#--相对丰都标准化后展示全部OTU-使用门水平着色。
p2 <- plot_bar(ps_rela, fill="Phylum") + theme_bw()
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 6,height = 8)
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 8,height = 8)
gpt <- subset_taxa(ps, Kingdom=="Bacteria")
gpt <- prune_taxa(names(sort(taxa_sums(ps),TRUE)[1:30]), gpt)
plot_heatmap(gpt, sample.label="Group")
plot_bar(gp.ch, fill="Genus") + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(11,"Spectral"))(60))
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(11,"Spectral"))(60))
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(11,"Set3"))(60))
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set3"))(60))
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set1"))(60))
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set2"))(60))
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set3"))(60))
plot_heatmap(gpt, "NMDS", "bray", "Group", "Family")
ps_rela = transform_sample_counts(ps, function(x) x/sum(x))
gpt <- subset_taxa(ps_rela, Kingdom=="Bacteria")
gpt <- prune_taxa(names(sort(taxa_sums(ps),TRUE)[1:30]), gpt)
#默认从OTU水平展示丰度热图
plot_heatmap(gpt, sample.label="Group")  + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set3"))(60))
?plot_heatmap
plot_heatmap(gpt, "NMDS", "bray", "Group", "Family")
#--该函数可以使用排序方法对行和列进行排序分析，并且按照结构进行顺序安排。
p3 <- plot_heatmap(gpt, "NMDS", "bray", "Group", "Family") + scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set3"))(60))
ggsave("./Fig4_Family_high_abundance_heatmap.png",p3,width = 8,height = 8)
ggsave("./Fig4_Family_high_abundance_heatmap.png",p3,width = 6,height = 6)
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1)
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) + coord_polar(theta="y")
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) + scale_size_manual(values = c(0.5, 1, 2))
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_manual(values = c(0.5, 1, 2))
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_manual(values = c(0.5： 2))
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_manual(values = c(0.5: 2))
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_binned()
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_continuous()
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_continuous()
ggsave("./Fig5_phytree_high_abundance_point.png",p4,width = 8,height = 8)
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.5) +
scale_size_continuous()
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) + coord_polar(theta="y") +
scale_size_continuous()
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.5) + coord_polar(theta="y") +
scale_size_continuous()
ggsave("./Fig5_phytree_high_abundance_point.png",p4,width = 8,height = 8)
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.8) +
scale_size_continuous()
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.5) + coord_polar(theta="y") +
scale_size_continuous()
ggsave("./Fig5_phytree_high_abundance_point.png",p4,width = 8,height = 8)
<- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.8) +
p4
myTaxa = names(sort(taxa_sums(ps), decreasing = TRUE)[1:100])
ps1 = prune_taxa(myTaxa, ps)
ps1
plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Genus")
plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum")
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum")
ggsave("./Fig6_Micro_network.png",p5,width = 8,height = 8)
myTaxa = names(sort(taxa_sums(ps), decreasing = TRUE)[1:50])
ps1 = prune_taxa(myTaxa, ps)
ps1
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum")
ggsave("./Fig6_Micro_network.png",p5,width = 8,height = 8)
library(DESeq2)
gm_mean = function(x, na.rm=TRUE){
exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}
diagdds = phyloseq_to_deseq2(ps, ~ Group)
diagdds = phyloseq_to_deseq2(ps, ~ Group)
## converting counts to integer mode
# calculate geometric means prior to estimate size factors
gm_mean = function(x, na.rm=TRUE){
exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}
geoMeans = apply(counts(diagdds), 1, gm_mean)
diagdds = estimateSizeFactors(diagdds, geoMeans = geoMeans)
diagdds = DESeq(diagdds, fitType="local")
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.01
sigtab = res[which(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(ps)[rownames(sigtab), ], "matrix"))
head(sigtab)
theme_set(theme_bw())
scale_fill_discrete <- function(palname = "Set1", ...) {
scale_fill_brewer(palette = palname, ...)
}
# Phylum order
x = tapply(sigtab$log2FoldChange, sigtab$Phylum, function(x) max(x))
x = sort(x, TRUE)
sigtab$Phylum = factor(as.character(sigtab$Phylum), levels=names(x))
# Genus order
x = tapply(sigtab$log2FoldChange, sigtab$Genus, function(x) max(x))
x = sort(x, TRUE)
sigtab$Genus = factor(as.character(sigtab$Genus), levels=names(x))
ggplot(sigtab, aes(x=Genus, y=log2FoldChange, color=Phylum)) + geom_point(size=6) +
theme(axis.text.x = element_text(angle = -90, hjust = 0, vjust=0.5))
p0/p4|p1/p4|p2/p3
knitr::opts_chunk$set(echo = TRUE,
fig.width = 7,
fig.height = 5,
fig.align = "center",
warning = FALSE,
message = FALSE
)
library(microbiome)
library(phyloseq)
library(gcookbook)
library(tidyverse)
library(ggClusterNet)
data(ps)
theme_set(theme_bw(21))
summarize_phyloseq(ps)
tab <- alpha(ps, index = "all")
tab <- alpha(ps, index = "all")
head(tab)
tab %>% dim()
library(ggplot2)
library(phyloseq)
library(ggClusterNet)# github：taowenmicro/ggCLusterNet
# metadata = read.delim("https://raw.githubusercontent.com/taowenmicro/R-_function/main/metadata.tsv",row.names = 1)
# otutab = read.delim("https://raw.githubusercontent.com/taowenmicro/R-_function/main/otutab.txt", row.names=1)
# taxonomy = read.table("https://raw.githubusercontent.com/taowenmicro/R-_function/main/taxonomy.txt", row.names=1,header = T)
# tree  = read_tree("https://raw.githubusercontent.com/taowenmicro/R-_function/main/otus.tree")
# library(Biostrings)
# rep = readDNAStringSet("https://raw.githubusercontent.com/taowenmicro/R-_function/main/otus.fa")
#
# ps = phyloseq(sample_data(metadata),
#               otu_table(as.matrix(otutab), taxa_are_rows=TRUE),
#               tax_table(as.matrix(taxonomy)), phy_tree(tree),refseq(rep)
#               )
data(ps)
#统计OTU数量
ntaxa(ps)
# 统计样品数量
nsamples(ps)
# 查看样品名称
sample_names(ps)[1:5]
# 查看物种分类等级
rank_names(ps)
# 查看分组文件表头信息
sample_variables(ps)
# 部分可视化OTU表格
otu_table(ps)[1:5, 1:5]
# 部分可视化tax注释表格
tax_table(ps)[1:5, 1:4]
# 查看进化树文件
phy_tree(ps)
#-基于样本-----去除序列量比较少的样本
ps <- prune_samples(sample_sums(ps) >=2000,ps);ps
#--基于样本----去除低丰度OTU，这里去除全部read为0的OTU
ps = filter_taxa(ps, function(x) sum(x ) > 0 , TRUE)
p0 <- plot_richness(ps, x="Group", color="Group", measures=c("Chao1", "Observed"))
p0$layers[[2]] = NULL # 去除误差线
# 添加箱型图
p0 <- p0  + geom_boxplot() + theme_bw()
ggsave("./Fig1_alpha.png",p0,width = 6,height = 4)
p0
ord <- ordinate(ps_rela, "NMDS", "bray")
ord
p1 = plot_ordination(ps, ord, type="samples", color="Group", title="Ordination") + theme_bw()
ps_rela = transform_sample_counts(ps, function(x) 1E6 * x/sum(x))
ord <- ordinate(ps_rela, "NMDS", "bray")
ord
p1 = plot_ordination(ps, ord, type="samples", color="Group", title="Ordination") + theme_bw()
p1
ggsave("./Fig2_ordination.png",p1,width = 4,height = 4)
ps_rela = transform_sample_counts(ps, function(x) x/sum(x))
ps_rela = transform_sample_counts(ps, function(x) x/sum(x))
#--相对丰都标准化后展示全部OTU-使用门水平着色。
p2 <- plot_bar(ps_rela, fill="Phylum") + theme_bw()
p2
p2$layers
p2$scales
#--展示部分感兴趣的微生物
gp.ch = subset_taxa(ps_rela, Phylum == "Chlamydiae")
plot_bar(gp.ch, fill="Genus")
plot_bar(gp.ch, fill="Genus") + theme_bw()
plot_bar(gp.ch, x="Group", fill="Genus")+ theme_bw()
plot_bar(gp.ch, "Group", fill="Genus", facet_grid=~Family)
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 5,height = 5)
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 6,height = 5)
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 7,height = 5)
ggsave("./Fig3_Phylum_abundance_bar.png",p2,width = 8,height = 5)
ps_rela = transform_sample_counts(ps, function(x) x/sum(x))
gpt <- subset_taxa(ps_rela, Kingdom=="Bacteria")
gpt <- prune_taxa(names(sort(taxa_sums(ps),TRUE)[1:30]), gpt)
#默认从OTU水平展示丰度热图
plot_heatmap(gpt, sample.label="Group")
#--该函数可以使用排序方法对行和列进行排序分析，并且按照结构进行顺序安排。
p3 <- plot_heatmap(gpt, "NMDS", "bray", "Group", "Family") +
scale_fill_gradientn(colours =colorRampPalette(RColorBrewer::brewer.pal(4,"Set3"))(60))
p3
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.8) +
scale_size_continuous()
p4
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=2) +
scale_size_continuous()
p4
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.5) + coord_polar(theta="y") +
scale_size_continuous()
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.8) +
scale_size_continuous()
p4
?plot_tree
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.2) +
scale_size_continuous()
p4
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.5) + coord_polar(theta="y") +
scale_size_continuous()
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.01) + coord_polar(theta="y") +
scale_size_continuous()
plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.08) + coord_polar(theta="y") +
scale_size_continuous()
# ?plot_tree
p4 <- plot_tree(gpt,  color="Group", label.tips="taxa_names", ladderize="left",size="abundance", base.spacing=0.1) +
scale_size_continuous()
p4
ggsave("./Fig5_phytree_high_abundance_point.png",p4,width = 8,height = 8)
ggsave("./Fig5_phytree_high_abundance_point.pdf",p4,width = 8,height = 8)
myTaxa = names(sort(taxa_sums(ps), decreasing = TRUE)[1:80])
ps1 = prune_taxa(myTaxa, ps)
ps1
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum")
p5
?plot_net
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum",
laymeth = "layout_randomly"
)
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum",
laymeth = "layout.randomly"
)
plot_net(laymeth='list')
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum",
laymeth = "circle"
)
p5
?plot_net
data(enterotype)
plot_net(enterotype, color="SeqTech", maxdist = 0.3)
plot_net(enterotype, color="SeqTech", maxdist = 0.3, laymeth = "circle")
myTaxa = names(sort(taxa_sums(ps), decreasing = TRUE)[1:50])
ps1 = prune_taxa(myTaxa, ps)
ps1
p5 <- plot_net(ps1,type = "taxa",maxdist = 0.6,color = "Phylum",
laymeth = "circle"
)
p5
plot_net(laymeth='list')
ggsave("./Fig6_Micro_network.png",p5,width = 7,height = 8)
ggsave("./Fig6_Micro_network.pdf",p5,width = 7,height = 8)
ggsave("./Fig6_Micro_network.pdf",p5,width = 7,height = 7)
ggsave("./Fig6_Micro_network.pdf",p5,width = 7,height = 6)
ggsave("./Fig6_Micro_network.pdf",p5,width = 7,height = 5.5)
?plot_net
library(microbiome)
library(phyloseq)
library(gcookbook)
library(tidyverse)
library(knitr)
library(ggClusterNet)
data(ps)
theme_set(theme_bw(21))
summarize_phyloseq(ps)
tab <- alpha(ps, index = "all")
```{R}
# Convert to compositional data
pseq <- microbiome::transform(ps, "compositional")
# Pick core taxa
pseq.core <- core(pseq, detection = 1/1000, prevalence = 5/100)
#--PCA ，t-SNE，CAP不可用
plot_landscape(pseq, method = "PCA",  col = "Group") +
labs(title = paste("PCA / CLR"))
p <- plot_landscape(pseq,
method = "NMDS", distance = "bray", col = "Group") +
labs(title = paste("NMDS / Compositional / Bray-Curtis"))
p
p <- plot_landscape(pseq,
method = "NMDS", distance = "bray", col = "Group") +
labs(title = paste("NMDS / Compositional / Bray-Curtis"))
p
#-使用需要进化树计算的距离
p <- plot_landscape(microbiome::transform(pseq.core, "compositional"),
method = "PCoA", distance = "unifrac", col = "Group") +
labs(title = paste("PCoA / Compositional / unifrac"))
print(p)
set.seed(423542)
x <- pseq.core
quiet(x.ord <- ordinate(x, "NMDS", "bray"))
# Pick the projected data (first two columns + metadata)
proj <- phyloseq::plot_ordination(x, x.ord, justDF=TRUE)
# Rename the projection axes
names(proj)[1:2] <- paste("Comp", 1:2, sep=".")
# 使用Microbioem包出图
p <- plot_landscape(proj[, 1:2], col = proj$nationality, legend = T)
print(p)
#-提取数据自己出图
p <- ggplot(aes_string(x = ax1, y = ax2, label = "Group"), data = proj) +
geom_text(size = 2)
print(p)
ggsave("./Fig1_PCoA.pdf",p5,width = 6,height = 4)
ggsave("./Fig1_PCoA.pdf",p1,width = 6,height = 4)
#-使用需要进化树计算的距离
p1 <- plot_landscape(microbiome::transform(pseq.core, "compositional"),
method = "PCoA", distance = "unifrac", col = "Group") +
labs(title = paste("PCoA / Compositional / unifrac"))
print(p1)
ggsave("./Fig1_PCoA.pdf",p1,width = 6,height = 4)
#-使用需要进化树计算的距离
p1 <- plot_landscape(microbiome::transform(pseq.core, "compositional"),
method = "PCoA", distance = "unifrac", col = "Group") +
labs(title = paste("PCoA / Compositional / unifrac")) +
theme_bw()
print(p1)
ggsave("./Fig1_PCoA.pdf",p1,width = 10,height = 8)
ggsave("./Fig1_PCoA.pdf",p1,width = 8,height = 6)
