knitr::opts_chunk$set(echo = TRUE,
fig.width = 7,
fig.height = 5,
fig.align = "center",
warning = FALSE,
message = FALSE
)
#pacman 管理R包，瑞国不存在可以直接安装
library(pacman)
BiocManager::install("pacman")
#pacman 管理R包，瑞国不存在可以直接安装
library(pacman)
pacman::p_load(phyloseq, metacoder, pryr, biomformat, RColorBrewer, ggplot2, gplots, Cairo, igraph,
BiocParallel, randomForest, metagenomeSeq, MASS, DESeq2, vegan, RJSONIO, ggfortify, pheatmap, xtable, genefilter,
data.table, reshape, stringr, ape, grid, gridExtra, splitstackshape, edgeR, globaltest, R.utils, viridis, ggrepel,
ppcor)
library("MicrobiomeAnalystR")
BiocManager::install("taxa")
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
BiocManager::install("qs")
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
mbSet<-PlotLibSizeView(mbSet, "norm_libsizes_0","png");
names(mbSet)
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
?PerformNormalization
mbSet<-PerformNormalization(mbSet, "none", "colsum", "rle");
mbSet<-PlotTaxaAundanceBar(mbSet, "taxa_alpha_0","Phylum","SampleType", "null", "barraw",10, "set3","sum",10, "bottom", "F", "png");
mbSet
?PlotTaxaAundanceBar
?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
mbSet<-PlotTaxaAundanceBar(mbSet,
"taxa_alpha_0",
"Phylum",
"SampleType",
"null",
"barraw",
10,
"set3",
"sum",
10,
"bottom",
"F",
format = "png");
mbSet<-PerformNormalization(mbSet, "rarewi", "none", "rle");
mbSet<-PlotTaxaAundanceBar(mbSet,
"taxa_alpha_0",
"Phylum",
"SampleType",
"null",
"barraw",
10,
"set3",
"sum",
10,
"bottom",
"F",
format = "png");
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 10,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_0","png");
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 10,"sum", 10, "bottom");
GetSeriesColors()
?PlotTaxaAundanceBar
mbSet<-PlotRarefactionCurve(mbSet, "filt","SampleType","SampleType","SampleType","5","rarefaction_curve_0","png");
mbSet<-PlotRarefactionCurve(mbSet, "filt","SampleType","SampleType","SampleType","5","rarefaction_curve_0","pdf");
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_0","pdf");
mbSet<-PlotAlphaData(mbSet, "filt","alpha_diver_0","Chao1","SampleType","OTU", "default", "pdf");
mbSet<-PlotAlphaBoxData(mbSet, "alpha_diverbox_0","Chao1","SampleType","default", "pdf");
mbSet<-PerformAlphaDiversityComp(mbSet, "tt","SampleType");
mbSet<-PlotBetaDiversity(mbSet, "beta_diver_0","PCoA","bray","expfac","SampleType","none","OTU","","Chao1", "yes", "png", 72, "default");#
mbSet<-PCoA3D.Anal(mbSet, "PCoA","bray","OTU","expfac","SampleType","","Chao1","beta_diver3d_0.json")
mbSet<-PlotBetaDiversity(mbSet, "beta_diver_0","PCoA","bray","expfac","SampleType","none","OTU","","Chao1", "yes", "pdf", 72, "default");#
mbSet<-PCoA3D.Anal(mbSet, "PCoA","bray","OTU","expfac","SampleType","","Chao1","beta_diver3d_0.json")
mbSet<-PerformCategoryComp(mbSet, "OTU", "adonis","bray","SampleType");
#-样本聚类
mbSet<-PlotTreeGraph(mbSet, "plot_tree_0","bray","ward.D","SampleType","OTU", "default", "pdf");
# 核心微生物分析
mbSet<-CoreMicrobeAnalysis(mbSet, "core_micro_0",0.2,0.01,"OTU","bwm","overview", "all_samples", "SampleType", "null", "pdf");
# 热图展示微生物丰度
mbSet<-PlotHeatmap(mbSet, "heatmap_0","euclidean","ward.D","bwm","SampleType","OTU","overview","F", "pdf","T","F");
# 核心微生物分析
mbSet<-CoreMicrobeAnalysis(mbSet, "core_micro_0",0.2,0.01,"OTU","bwm","overview", "all_samples", "SampleType", "null", "pdf");
# 热图展示微生物丰度
mbSet<-PlotHeatmap(mbSet, "heatmap_0","euclidean","ward.D","bwm","SampleType","OTU","overview","F", "pdf","T","F");
mbSet<-PerformLefseAnal(mbSet,  0.1, "fdr", 2.0,  "SampleType","F","NA","OTU");
mbSet<-PlotLEfSeSummary(mbSet, 15, "dot",  "bar_graph_0","pdf");
mbSet<-PerformUnivarTest(mbSet, "SampleType",0.05,"NA","OTU","tt");
mbSet<-PlotLibSizeView(mbSet, "norm_libsizes_0","pdf");
# ?PlotTaxaAundanceBar
mbSet<-PlotTaxaAundanceBar(mbSet,
"taxa_alpha_0",
"Phylum",
"SampleType",
"null",
"barraw",
10,
"set3",
"sum",
10,
"bottom",
"F",
format = "pdf");
mbSet<-PlotTaxaAundanceBar(mbSet, "taxa_alpha_1","Class","SampleType", "none", "barnorm",10, "set3","sum",10, "bottom", "F", "pdf");
# ?PlotTaxaAundanceBar
#
mbSet<-PlotTaxaAundanceBar(mbSet,"taxa_alpha_0","Phylum","SampleType","null","barraw",10,"set3","sum",10, "bottom", "F",format ="pdf");
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_2","Class","SampleType", "none", "barnorm",10,"set3","med", 10, "bottom", "F", "png");
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_2","Class","SampleType", "none", "barnorm",10,"set3","med", 10, "bottom", "F", "pdf");
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_3","Phylum","SampleType", "none", "barnorm",100,"set3","med", 10, "bottom", "F", "pdf")
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_3","Phylum","SampleType", "none", "barnorm",1000,"set3","med", 10, "bottom", "F", "pdf")
PlotTaxaAbundanceBarSamGrp
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 100,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_1","pdf");
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 10,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_0","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_2","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_0","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Genus","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Class","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","png");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","png");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_4","png");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_0","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_0","pdf");
mbSet<-PlotRarefactionCurve(mbSet, "filt","SampleType","SampleType","SampleType","5","rarefaction_curve_0","pdf");
#pacman 管理R包，瑞国不存在可以直接安装
library(pacman)
pacman::p_load(phyloseq, metacoder, pryr, biomformat, RColorBrewer, ggplot2, gplots, Cairo, igraph,
BiocParallel, randomForest, metagenomeSeq, MASS, DESeq2, vegan, RJSONIO, ggfortify, pheatmap, xtable, genefilter,
data.table, reshape, stringr, ape, grid, gridExtra, splitstackshape, edgeR, globaltest, R.utils, viridis, ggrepel,
ppcor)
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
mbSet<-PlotLibSizeView(mbSet, "norm_libsizes_0","pdf");
names(mbSet)
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
# ?PlotTaxaAundanceBar
# 抽平
mbSet<-PlotTaxaAundanceBar(mbSet,"taxa_alpha_0","Phylum","SampleType","null","barraw",10,"set3","sum",10, "bottom", "F",format ="pdf");
# 修改为相对丰度堆叠柱状图
mbSet<-PlotTaxaAundanceBar(mbSet, "taxa_alpha_1","Class","SampleType", "none", "barnorm",10, "set3","sum",10, "bottom", "F", "pdf");
# 转换堆叠柱状图为横向
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_2","Class","SampleType", "none", "barnorm",10,"set3","med", 10, "bottom", "F", "pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_3","Phylum","SampleType", "none", "barnorm",1000,"set3","med", 10, "bottom", "F", "pdf")
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 10,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_0","pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 100,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_1","pdf");
mbSet<-PlotRarefactionCurve(mbSet, "filt","SampleType","SampleType","SampleType","5","rarefaction_curve_0","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_0","pdf");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","png");
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotBetaDiversity(mbSet, "beta_diver_0","PCoA","bray","expfac","SampleType","none","OTU","","Chao1", "yes", "pdf", 72, "default");#
mbSet<-PCoA3D.Anal(mbSet, "PCoA","bray","OTU","expfac","SampleType","","Chao1","beta_diver3d_0.json")
mbSet<-PerformCategoryComp(mbSet, "OTU", "adonis","bray","SampleType");
#-样本聚类
mbSet<-PlotTreeGraph(mbSet, "plot_tree_0","bray","ward.D","SampleType","OTU", "default", "pdf");
mbSet<-PerformCategoryComp(mbSet, "OTU", "permdisp","bray","SampleType");
mbSet
PerformCategoryComp
mbSet$analSet$stat.info
#pacman 管理R包，瑞国不存在可以直接安装
library(pacman)
pacman::p_load(phyloseq, metacoder, pryr, biomformat, RColorBrewer, ggplot2, gplots, Cairo, igraph,
BiocParallel, randomForest, metagenomeSeq, MASS, DESeq2, vegan, RJSONIO, ggfortify, pheatmap, xtable, genefilter,
data.table, reshape, stringr, ape, grid, gridExtra, splitstackshape, edgeR, globaltest, R.utils, viridis, ggrepel,
ppcor)
# BiocManager::install("qs")
# BiocManager::install('metacoder')
# BiocManager::install('pryr')
# BiocManager::install('metagenomeSeq')
# BiocManager::install('globaltest')
# devtools::install_github("cran/ppcor")
# devtools::install_github("kylebittinger/qiimer")
# devtools::install_github("kylebittinger/qiimer")
# install.packages("./Tax4Fun-master/", repos = NULL, type = "source")
# devtools::install_github("xia-lab/MicrobiomeAnalystR", build = TRUE, build_opts = c("--no-resave-data", "--no-manual"))
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
mbSet<-PlotLibSizeView(mbSet, "norm_libsizes_0","pdf");
names(mbSet)
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
# ?PlotTaxaAundanceBar
# 抽平
mbSet<-PlotTaxaAundanceBar(mbSet,"taxa_alpha_0","Phylum","SampleType","null","barraw",10,"set3","sum",10, "bottom", "F",format ="pdf");
# 修改为相对丰度堆叠柱状图
mbSet<-PlotTaxaAundanceBar(mbSet, "taxa_alpha_1","Class","SampleType", "none", "barnorm",10, "set3","sum",10, "bottom", "F", "pdf");
# 转换堆叠柱状图为横向
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_2","Class","SampleType", "none", "barnorm",10,"set3","med", 10, "bottom", "F", "pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_3","Phylum","SampleType", "none", "barnorm",1000,"set3","med", 10, "bottom", "F", "pdf")
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 10,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_0","pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 100,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_1","pdf");
mbSet<-PlotBetaDiversity(mbSet, "beta_diver_0","PCoA","bray","expfac","SampleType","none","OTU","","Chao1", "yes", "pdf", 72, "default");#
mbSet<-PCoA3D.Anal(mbSet, "PCoA","bray","OTU","expfac","SampleType","","Chao1","beta_diver3d_0.json")
mbSet<-PerformCategoryComp(mbSet, "OTU", "adonis","bray","SampleType");
#-样本聚类
mbSet<-PlotTreeGraph(mbSet, "plot_tree_0","bray","ward.D","SampleType","OTU", "default", "pdf");
#更换群落差异检测方法
mbSet<-PerformCategoryComp(mbSet, "OTU", "permdisp","bray","SampleType");
mbSet$analSet$stat.info
# 核心微生物分析
mbSet<-CoreMicrobeAnalysis(mbSet, "core_micro_0",0.2,0.01,"OTU","bwm","overview", "all_samples", "SampleType", "null", "pdf");
# 热图展示微生物丰度
mbSet<-PlotHeatmap(mbSet, "heatmap_0","euclidean","ward.D","bwm","SampleType","OTU","overview","F", "pdf","T","F");
mbSet<-PlotHeatmap(mbSet, "heatmap_1","euclidean","ward.D","bwm","SampleType","Phylum","overview","F", "png","T","F");
mbSet<-PlotHeatmap(mbSet, "heatmap_1","euclidean","ward.D","bwm","SampleType","Phylum","overview","F", "pdf","T","F");
mbSet<-PlotTreeGraph(mbSet, "plot_tree_0","bray","ward.D","SampleType","OTU", "default", "png");
mbSet<-PrepareCorrExpValues(mbSet, "SampleType", "Phylum", "dbgr", "reingold-tilford", "all", "0.05")
mbSet<-PerformLefseAnal(mbSet,  0.1, "fdr", 2.0,  "SampleType","F","NA","OTU");
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
#pacman 管理R包，瑞国不存在可以直接安装
library(pacman)
pacman::p_load(phyloseq, metacoder, pryr, biomformat, RColorBrewer, ggplot2, gplots, Cairo, igraph,
BiocParallel, randomForest, metagenomeSeq, MASS, DESeq2, vegan, RJSONIO, ggfortify, pheatmap, xtable, genefilter,
data.table, reshape, stringr, ape, grid, gridExtra, splitstackshape, edgeR, globaltest, R.utils, viridis, ggrepel,
ppcor)
# BiocManager::install("qs")
# BiocManager::install('metacoder')
# BiocManager::install('pryr')
# BiocManager::install('metagenomeSeq')
# BiocManager::install('globaltest')
# devtools::install_github("cran/ppcor")
# devtools::install_github("kylebittinger/qiimer")
# devtools::install_github("kylebittinger/qiimer")
# install.packages("./Tax4Fun-master/", repos = NULL, type = "source")
# devtools::install_github("xia-lab/MicrobiomeAnalystR", build = TRUE, build_opts = c("--no-resave-data", "--no-manual"))
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
# ?PlotTaxaAundanceBar
# 抽平
mbSet<-PlotTaxaAundanceBar(mbSet,"taxa_alpha_0","Phylum","SampleType","null","barraw",10,"set3","sum",10, "bottom", "F",format ="pdf");
# 修改为相对丰度堆叠柱状图
mbSet<-PlotTaxaAundanceBar(mbSet, "taxa_alpha_1","Class","SampleType", "none", "barnorm",10, "set3","sum",10, "bottom", "F", "pdf");
# 转换堆叠柱状图为横向
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_2","Class","SampleType", "none", "barnorm",10,"set3","med", 10, "bottom", "F", "pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_3","Phylum","SampleType", "none", "barnorm",1000,"set3","med", 10, "bottom", "F", "pdf")
mbSet<-PerformLefseAnal(mbSet,  0.1, "fdr", 2.0,  "SampleType","F","NA","OTU");
mbSet<-PlotLEfSeSummary(mbSet, 15, "dot",  "bar_graph_0","pdf");
mbSet<-PerformUnivarTest(mbSet, "SampleType",0.05,"NA","OTU","tt");
mbSet<-PlotLEfSeSummary(mbSet, 15, "dot",  "bar_graph_0","png");
mbSet<-RF.Anal(mbSet, 500,7,1,"SampleType","OTU")
mbSet<-PlotRF.Classify(mbSet, 15, "rf_cls_0","png", width=NA)
mbSet<-PlotRF.VIP(mbSet, 15, "rf_imp_0","png", width=NA)
mbSet<-PlotRF.Classify(mbSet, 15, "rf_cls_0","pdf", width=NA)
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU");
mbSet<-PerformNormalization(mbSet, "none", "colsum", "none");
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU");
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
mbSet<-PerformNormalization(mbSet, "none", "colsum", "none");
mbSet<-PerformMetagenomeSeqAnal(mbSet, "SampleType",0.05,"NA","OTU","zigfit");
#pacman 管理R包，瑞国不存在可以直接安装
library(pacman)
pacman::p_load(phyloseq, metacoder, pryr, biomformat, RColorBrewer, ggplot2, gplots, Cairo, igraph,
BiocParallel, randomForest, metagenomeSeq, MASS, DESeq2, vegan, RJSONIO, ggfortify, pheatmap, xtable, genefilter,
data.table, reshape, stringr, ape, grid, gridExtra, splitstackshape, edgeR, globaltest, R.utils, viridis, ggrepel,
ppcor)
# BiocManager::install("qs")
# BiocManager::install('metacoder')
# BiocManager::install('pryr')
# BiocManager::install('metagenomeSeq')
# BiocManager::install('globaltest')
# devtools::install_github("cran/ppcor")
# devtools::install_github("kylebittinger/qiimer")
# devtools::install_github("kylebittinger/qiimer")
# install.packages("./Tax4Fun-master/", repos = NULL, type = "source")
# devtools::install_github("xia-lab/MicrobiomeAnalystR", build = TRUE, build_opts = c("--no-resave-data", "--no-manual"))
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
mbSet<-PlotLibSizeView(mbSet, "norm_libsizes_0","pdf");
names(mbSet)
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU");
# 差异分析metagenomeSeq
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
mbSet<-PerformNormalization(mbSet, "none", "colsum", "none");
mbSet<-PerformMetagenomeSeqAnal(mbSet, "SampleType",0.05,"NA","OTU","zigfit");
mbSet<-RF.Anal(mbSet, 500,7,1,"SampleType","OTU")
mbSet<-PlotRF.Classify(mbSet, 15, "rf_cls_0","pdf", width=NA)
mbSet<-PlotRF.VIP(mbSet, 15, "rf_imp_0","pdf", width=NA)
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU");
# 差异分析metagenomeSeq
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
mbSet<-PerformNormalization(mbSet, "none", "colsum", "none");
mbSet<-PerformMetagenomeSeqAnal(mbSet, "SampleType",0.05,"NA","OTU","zigfit");
mbSet<-PlotLibSizeView(mbSet, "norm_libsizes_0","pdf");
names(mbSet)
library("MicrobiomeAnalystR")
#-初始化项目
mbSet<-Init.mbSetObj()
mbSet<-SetModuleType(mbSet, "mdp")#--扩增子数据标记为："mdp"
mbSet<-ReadSampleTable(mbSet, "../../data_MicrobiomeAnalystR/map.txt");
mbSet<-Read16STaxaTable(mbSet, "../../data_MicrobiomeAnalystR/taxonomy.txt");
mbSet<-Read16SAbundData(mbSet, "../../data_MicrobiomeAnalystR/otutab.txt","text","Others/Not_specific","T");
mbSet <- ReadTreeFile(mbSet,"../../data_MicrobiomeAnalystR/otus.tree")
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
#---转化为phyloseq对象进行分析
mbSet<-CreatePhyloseqObj(mbSet, "text","Others/Not_specific","F")
mbSet<-SanityCheckData(mbSet, "text");
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
# 过滤样本，选择需要分析的样本进行后续统计分析
smpl.nm.vec <- c("KO1","KO2","KO3","KO4","KO5","KO6","OE1","OE2","OE3","OE4","OE5","OE6","WT1","WT2","WT3","WT4","WT5","WT6")
mbSet<-UpdateSampleItems(mbSet);
# ?PerformNormalization
mbSet<-PerformNormalization(mbSet, "rarewi", "colsum", "rle");
# ?PlotTaxaAundanceBar
# 抽平
mbSet<-PlotTaxaAundanceBar(mbSet,"taxa_alpha_0","Phylum","SampleType","null","barraw",10,"set3","sum",10, "bottom", "F",format ="pdf");
# 修改为相对丰度堆叠柱状图
mbSet<-PlotTaxaAundanceBar(mbSet, "taxa_alpha_1","Class","SampleType", "none", "barnorm",10, "set3","sum",10, "bottom", "F", "pdf");
# 转换堆叠柱状图为横向
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_2","Class","SampleType", "none", "barnorm",10,"set3","med", 10, "bottom", "F", "pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotTaxaAbundanceBarSamGrp(mbSet, "taxa_alpha_3","Phylum","SampleType", "none", "barnorm",1000,"set3","med", 10, "bottom", "F", "pdf")
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 10,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_0","pdf");
#-通过设定toptaxa大小来调整多少个低丰度的微生物被合并
mbSet<-PlotOverallPieGraph(mbSet, "Phylum", 100,"sum", 10, "bottom");
GetSeriesColors()
mbSet<-SavePiechartImg(mbSet, "Phylum","primary_piechart_1","pdf");
mbSet<-PlotRarefactionCurve(mbSet, "filt","SampleType","SampleType","SampleType","5","rarefaction_curve_0","pdf");
# mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_0","png");
mbSet<-PlotAlphaData(mbSet, "filt","alpha_diver_0","Chao1","SampleType","OTU", "default", "pdf");
mbSet<-PlotAlphaBoxData(mbSet, "alpha_diverbox_0","Chao1","SampleType","default", "pdf");
mbSet<-PerformAlphaDiversityComp(mbSet, "tt","SampleType");
#
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","rectangular","phylogenetic_tree_0","pdf");
#-环状
mbSet<-PlotPhylogeneticTree(mbSet, "SampleType","SampleType","Phylum","radial","phylogenetic_tree_1","pdf");
mbSet<-PlotBetaDiversity(mbSet, "beta_diver_0","PCoA","bray","expfac","SampleType","none","OTU","","Chao1", "yes", "pdf", 72, "default");#
mbSet<-PCoA3D.Anal(mbSet, "PCoA","bray","OTU","expfac","SampleType","","Chao1","beta_diver3d_0.json")
mbSet<-PerformCategoryComp(mbSet, "OTU", "adonis","bray","SampleType");
#-样本聚类
mbSet<-PlotTreeGraph(mbSet, "plot_tree_0","bray","ward.D","SampleType","OTU", "default", "pdf");
#更换群落差异检测方法
mbSet<-PerformCategoryComp(mbSet, "OTU", "permdisp","bray","SampleType");
mbSet$analSet$stat.info
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU");
# 差异分析metagenomeSeq
mbSet<-ApplyAbundanceFilter(mbSet, "prevalence", 4, 0.2);
mbSet<-ApplyVarianceFilter(mbSet, "iqr", 0.1);
mbSet<-PerformNormalization(mbSet, "none", "colsum", "none");
mbSet<-PerformMetagenomeSeqAnal(mbSet, "SampleType",0.05,"NA","OTU","zigfit");
mbSet<-PerformRNAseqDE(mbSet, "EdgeR",0.05,"SampleType","NA","OTU")
